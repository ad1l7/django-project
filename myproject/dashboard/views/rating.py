from django.shortcuts import render, redirect
from django.contrib.auth.decorators import login_required, user_passes_test
from django.contrib import messages
from django.utils.timezone import now, timedelta
from users.models import User
from dashboard.models import Task, RewardItem
from dashboard.forms import RewardItemForm


@login_required
def rating_view(request):
    filter_type = request.GET.get('filter', 'month')
    all_users = User.objects.all()

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏
    if filter_type == 'day':
        since = now().date() - timedelta(days=1)
    elif filter_type == 'week':
        since = now().date() - timedelta(days=7)
    else:
        since = now().date() - timedelta(days=30)

    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∑–∞ –ø–µ—Ä–∏–æ–¥
    done_tasks = Task.objects.filter(status='done', created_at__date__gte=since)

    # –†–∞—Å—á—ë—Ç –Ω–∞–≥—Ä–∞–¥ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    rewards_dict = {}
    for task in done_tasks:
        if task.assigned_to_id:
            rewards_dict[task.assigned_to_id] = rewards_dict.get(task.assigned_to_id, 0) + task.reward

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Å –Ω–∞–≥—Ä–∞–¥–∞–º–∏ –∏ —Ä–æ–ª—è–º–∏
    user_rewards = []
    for user in all_users:
        reward = rewards_dict.get(user.id, 0)
        if user.role == 'WORKER':
            role_label = 'üë∑ –†–∞–±–æ—Ç–Ω–∏–∫'
        elif user.role == 'ADMIN':
            role_label = 'üßë‚Äçüíº –ê–¥–º–∏–Ω'
        elif user.role == 'DIRECTOR':
            role_label = 'üë®‚Äçüíº –î–∏—Ä–µ–∫—Ç–æ—Ä'
        else:
            role_label = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'

        user_rewards.append({
            'user': user,
            'reward': reward,
            'role_label': role_label
        })

    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —É–±—ã–≤–∞–Ω–∏—é –Ω–∞–≥—Ä–∞–¥
    user_rewards.sort(key=lambda x: x['reward'], reverse=True)

    # –ú–∞–≥–∞–∑–∏–Ω –Ω–∞–≥—Ä–∞–¥
    reward_items = RewardItem.objects.all()
    form = None

    if request.user.role in ('ADMIN', 'DIRECTOR'):
        if request.method == 'POST':
            form = RewardItemForm(request.POST, request.FILES)
            if form.is_valid():
                form.save()
                messages.success(request, '–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –º–∞–≥–∞–∑–∏–Ω.')
                return redirect('dashboard:rating')
        else:
            form = RewardItemForm()

    return render(request, 'dashboard/rating/rating.html', {
        'user_rewards': user_rewards,
        'filter': filter_type,
        'reward_items': reward_items,
        'form': form,
    })


@user_passes_test(lambda u: u.is_authenticated and u.role in ('ADMIN', 'DIRECTOR'))
def reset_rewards(request):
    if request.method == 'POST':
        User.objects.all().update(total_reward=0)
        Task.objects.filter(status='done').update(reward=0)
        messages.success(request, '–ù–∞–≥—Ä–∞–¥—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω—É–ª–µ–Ω—ã, –∑–∞–¥–∞—á–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.')
    return redirect('dashboard:rating')
